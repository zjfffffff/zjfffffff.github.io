#ifndef __USART_H
#define __USART_H
#include "stdio.h"	
#include "stm32f4xx_conf.h"
#include "stm32f4xx_it.h"
//////////////////////////////////////////////////////////////////////////////////	 
//本程序只供学习使用，未经作者许可，不得用于其它任何用途
//Mini STM32开发板
//串口1初始化		   
//正点原子@ALIENTEK
//技术论坛:www.openedv.csom
//修改日期:2011/6/14
//版本：V1.4
//版权所有，盗版必究。
//Copyright(C) 正点原子 2009-2019
//All rights reserved
//********************************************************************************
//V1.3修改说明 
//支持适应不同频率下的串口波特率设置.
//加入了对printf的支持
//增加了串口接收命令功能.
//修正了printf第一个字符丢失的bug
//V1.4修改说明
//1,修改串口初始化IO的bug
//2,修改了USART_RX_STA,使得串口最大接收字节数为2的14次方
//3,增加了USART_REC_LEN,用于定义串口最大允许接收的字节数(不大于2的14次方)
//4,修改了EN_USART1_RX的使能方式
////////////////////////////////////////////////////////////////////////////////// 	
#define USART_REC_LEN  			4  	//定义最大接收字节数 200
#define EN_USART1_RX 			1		//使能（1）/禁止（0）串口1接收
	  	
extern u8  USART_RX_BUF[USART_REC_LEN]; //接收缓冲,最大USART_REC_LEN个字节.末字节为换行符 
extern u16 USART_RX_STA;         		//接收状态标记	
//如果想串口中断接收，请不要注释以下宏定义
void uart4_init(u32 bound);
void uart2_init(u32 bound);
void uart3_init(u32 bound_3);
void Delay_us(int num);



void Com_Read(u32 ADDR);
void Com_Read_1(u32 ADDR,u16 data[],u8 len);
void Com_Write(u32 ADDR,u32 Com_En,u16 TX_Len);
void SF_Com_Falg_Read(void);
//void SF_DATA_1K();

//typedef union
//{
//	struct
//	{
//			u8 Low_byte;
//			u8 MLow_byte;
//			u8 MHigh_byte;
//			u8 High_byte;
//	}Data_byte;
//  float Data_float;
//	u32 Data_u32;
//	s32 Data_s32;
//}Data_value;

//typedef struct
//{
//	float Gyro_X;//
//  float Gyro_Y;//
//	float Gyro_Z;//
//	
//	float Gyro_X_axis_plus_meter;
//  float Gyro_Y_axis_plus_meter;
//	float Gyro_Z_axis_plus_meter;
//	
//	float Gyro_Roll;          //横滚角
//  float Gyro_Pitch;         //俯仰角
//	float Gyro_Yaw;         //航向角
//}Gyro_DATA;

#endif


